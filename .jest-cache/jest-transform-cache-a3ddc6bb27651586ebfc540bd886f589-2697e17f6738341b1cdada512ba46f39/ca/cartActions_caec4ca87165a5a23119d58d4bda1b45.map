{"version":3,"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","names":["addCartStarted","type","actionTypes_1","addCartSucceeded","data","payload","addCartFailed","error","addCart","dispatch","ProductService","then","res","localStorage","setItem","id","catch","_a","exports","updateCartStarted","updateCartSucceeded","updateCartFailed","updateCart","cartId","getCartsStarted","getCartsSucceeded","getCartsFailed","getCarts","console","log"],"sources":["/Users/mac/Documents/Projects/tech-test/src/actions/cartActions.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { IAddCart } from '../interfaces';\nimport {\n  ADD_CART_STARTED,\n  ADD_CART_SUCCEEDED,\n  ADD_CART_FAILED,\n  UPDATE_CART_STARTED,\n  UPDATE_CART_SUCCEEDED,\n  UPDATE_CART_FAILED,\n  GET_CARTS_STARTED,\n  GET_CARTS_SUCCEEDED,\n  GET_CARTS_FAILED\n} from '../lib/constants/actionTypes';\nimport * as ProductService from '../services/api';\n\n//Add to Cart\nconst addCartStarted = () => ({\n  type: ADD_CART_STARTED\n});\n\nconst addCartSucceeded = (data: IAddCart) => ({\n  type: ADD_CART_SUCCEEDED,\n  payload: data\n});\n\nconst addCartFailed = (error: string) => ({\n  type: ADD_CART_FAILED,\n  payload: error,\n  error: true\n});\n\nexport const addCart =\n  (payload: IAddCart): any =>\n  async (\n    dispatch: (arg0: { type: string; payload?: string | IAddCart; error?: boolean }) => void\n  ) => {\n    dispatch(addCartStarted());\n    await ProductService.addCart(payload)\n      .then((res) => {\n        localStorage.setItem('cartId', res.id);\n        dispatch(addCartSucceeded(res));\n      })\n      .catch(() => {\n        dispatch(addCartFailed('error.response'));\n      });\n  };\n\n//update to Cart\nconst updateCartStarted = () => ({\n  type: UPDATE_CART_STARTED\n});\n\nconst updateCartSucceeded = (data: IAddCart) => ({\n  type: UPDATE_CART_SUCCEEDED,\n  payload: data\n});\n\nconst updateCartFailed = (error: string) => ({\n  type: UPDATE_CART_FAILED,\n  payload: error,\n  error: true\n});\n\nexport const updateCart =\n  (cartId: string | number, payload: IAddCart): any =>\n  async (dispatch: any) => {\n    dispatch(updateCartStarted());\n    await ProductService.updateCart(cartId, payload)\n      .then((res) => {\n        dispatch(updateCartSucceeded(res));\n      })\n      .catch(() => {\n        dispatch(updateCartFailed('error.response'));\n      });\n  };\n\n//get to Carts\nconst getCartsStarted = () => ({\n  type: GET_CARTS_STARTED\n});\n\nconst getCartsSucceeded = (data: string) => ({\n  type: GET_CARTS_SUCCEEDED,\n  payload: data\n});\n\nconst getCartsFailed = (error: string) => ({\n  type: GET_CARTS_FAILED,\n  payload: error,\n  error: true\n});\n\nexport const getCarts =\n  (cartId: string | number): any =>\n  async (dispatch: any) => {\n    dispatch(getCartsStarted());\n    await ProductService.getCarts(cartId)\n      .then((res) => {\n        console.log('res', res);\n\n        dispatch(getCartsSucceeded(res));\n      })\n      .catch(() => {\n        dispatch(getCartsFailed('error.response'));\n      });\n  };\n"]}