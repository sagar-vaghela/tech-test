{"file":"/Users/mac/Documents/Projects/tech-test/src/services/fetch/fetch.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,0EAAoD;AAEpD,IAAM,cAAc,GAClB,UAAC,IAA6B;IAC9B,OAAA,UAAO,GAAsB,EAAE,MAAW;QAAX,uBAAA,EAAA,WAAW;;;;;;wBAChC,KAAsD,MAAM,QAAlC,EAAjB,YAAY,mBAAG,EAAE,KAAA,EAAK,IAAI,UAAmB,MAAM,EAA9D,WAAuC,CAAF,CAA0B;wBACpD,qBAAM,KAAK,CAAC,GAAG,sBAC9B,OAAO,aACL,MAAM,EAAE,kBAAkB,IACvB,YAAY,KAGd,IAAI,GACJ,IAAI,EACP,EAAA;;wBARI,QAAQ,GAAG,SAQf;6BACE,CAAC,QAAQ,CAAC,EAAE,EAAZ,wBAAY;wBACd,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;4BAC3B,MAAM,IAAI,2BAAiB,CAAC,yCAAyC,CAAC,CAAC;yBACxE;wBACa,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;;wBAA7B,KAAK,GAAG,SAAqB;wBAE7B,QAAQ,GAAW,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAI,mCAAmC,CAAC,CAAC;wBACzF,QAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;wBAC3B,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC;wBAChC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,CAAC;wBAChC,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;wBAClC,QAAQ,CAAC,EAAE,GAAG,KAAK,CAAC;wBACpB,MAAM,QAAQ,CAAC;4BAEV,qBAAM,QAAQ,CAAC,IAAI,EAAE,EAAA;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAC9B;AA1BD,CA0BC,CAAC;AAES,QAAA,GAAG,GAAG,cAAc,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACxC,QAAA,IAAI,GAAG,cAAc,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1C,QAAA,GAAG,GAAG,cAAc,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;AACxC,QAAA,GAAG,GAAG,cAAc,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC","names":[],"sources":["/Users/mac/Documents/Projects/tech-test/src/services/fetch/fetch.ts"],"sourcesContent":["import { headerParams, IError } from '../../interfaces';\nimport ErrorUnauthorized from './errorUnauthorized';\n\nconst createFetchFor =\n  (init: RequestInit | undefined) =>\n  async (url: RequestInfo | URL, params = {}) => {\n    const { headers: HeaderParams = {}, ...rest }: headerParams = params;\n    const response = await fetch(url, {\n      headers: {\n        Accept: 'application/json',\n        ...HeaderParams\n      },\n\n      ...init,\n      ...rest\n    });\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new ErrorUnauthorized('Request Unauthorized. Please try again.');\n      }\n      const error = await response.json();\n      //  Build an API error object\n      const apiError: IError = new Error(error.message || 'Request failed. Please try again.');\n      apiError.name = 'ApiError';\n      apiError.code = error.errorCode;\n      apiError.type = error.errorType;\n      apiError.status = response.status;\n      apiError.ok = false;\n      throw apiError;\n    }\n    return await response.json();\n  };\n\nexport const get = createFetchFor({ method: 'GET' });\nexport const post = createFetchFor({ method: 'POST' });\nexport const put = createFetchFor({ method: 'PUT' });\nexport const del = createFetchFor({ method: 'DELETE' });\n"],"version":3}