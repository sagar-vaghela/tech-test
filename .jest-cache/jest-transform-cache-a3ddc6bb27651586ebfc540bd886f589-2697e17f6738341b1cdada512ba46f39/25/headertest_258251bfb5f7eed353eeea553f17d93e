f4f2de18415e638ca42487186521df83
"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jsx_runtime_1 = require("react/jsx-runtime");
var react_1 = require("@testing-library/react");
var index_1 = __importDefault(require("../src/components/Header/index"));
jest.fn(function () { return 'renderlocation'; });
afterEach(function () {
    jest.clearAllMocks();
});
var TestComponent = function (props) {
    if (props === void 0) { props = {}; }
    var propsHeader = __assign({}, props);
    return ((0, jsx_runtime_1.jsx)(index_1.default, __assign({}, propsHeader)));
};
describe('Header tests', function () {
    it('Header is rendered with child', function () {
        var getByTestId = (0, react_1.render)((0, jsx_runtime_1.jsx)(TestComponent, {})).getByTestId;
        var HeaderEle = getByTestId('pageHeader');
        expect(HeaderEle).toHaveTextContent('renderlocation');
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21hYy9Eb2N1bWVudHMvUHJvamVjdHMvdGVjaC10ZXN0L19fdGVzdHNfXy9oZWFkZXIudGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxnREFBd0Q7QUFDeEQseUVBQW9EO0FBR3BELElBQUksQ0FBQyxFQUFFLENBQUMsY0FBTSxPQUFBLGdCQUFnQixFQUFoQixDQUFnQixDQUFDLENBQUM7QUFFaEMsU0FBUyxDQUFDO0lBQ1IsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBTSxhQUFhLEdBQUcsVUFBQyxLQUFRO0lBQVIsc0JBQUEsRUFBQSxVQUFRO0lBQzdCLElBQU0sV0FBVyxnQkFDWixLQUFLLENBQ1QsQ0FBQztJQUNGLE9BQU8sQ0FDSCx1QkFBQyxlQUFNLGVBQUssV0FBVyxFQUFHLENBQzdCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixRQUFRLENBQUMsY0FBYyxFQUFFO0lBQ3ZCLEVBQUUsQ0FBQywrQkFBK0IsRUFBRTtRQUMxQixJQUFBLFdBQVcsR0FBSyxJQUFBLGNBQU0sRUFBQyx1QkFBQyxhQUFhLEtBQUcsQ0FBQyxZQUE5QixDQUErQjtRQUVsRCxJQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDNUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDeEQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9Qcm9qZWN0cy90ZWNoLXRlc3QvX190ZXN0c19fL2hlYWRlci50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyLCBzY3JlZW4gfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vc3JjL2NvbXBvbmVudHMvSGVhZGVyL2luZGV4JztcbmltcG9ydCB7IFJvdXRlIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5cbmplc3QuZm4oKCkgPT4gJ3JlbmRlcmxvY2F0aW9uJyk7XG5cbmFmdGVyRWFjaCgoKSA9PiB7XG4gIGplc3QuY2xlYXJBbGxNb2NrcygpO1xufSk7XG5cbmNvbnN0IFRlc3RDb21wb25lbnQgPSAocHJvcHM9e30pID0+IHtcbiAgY29uc3QgcHJvcHNIZWFkZXIgPSB7XG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIHJldHVybiAoXG4gICAgICA8SGVhZGVyIHsuLi5wcm9wc0hlYWRlcn0vPlxuICApO1xufTtcblxuZGVzY3JpYmUoJ0hlYWRlciB0ZXN0cycsICgpID0+IHtcbiAgaXQoJ0hlYWRlciBpcyByZW5kZXJlZCB3aXRoIGNoaWxkJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXN0SWQgfSA9IHJlbmRlcig8VGVzdENvbXBvbmVudCAvPik7XG5cbiAgICBjb25zdCBIZWFkZXJFbGUgPSBnZXRCeVRlc3RJZCgncGFnZUhlYWRlcicpO1xuICAgIGV4cGVjdChIZWFkZXJFbGUpLnRvSGF2ZVRleHRDb250ZW50KCdyZW5kZXJsb2NhdGlvbicpO1xuICB9KTtcbn0pOyJdLCJ2ZXJzaW9uIjozfQ==